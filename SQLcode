--установка ORACLE SCRIPT в сессии
alter session set "_ORACLE_SCRIPT"=true
--Просмотр пользователей под SYS
SELECT * FROM dba_users

--создаине пользователя с паролем
CREATE USER USERS_1 IDENTIFIED BY Sql$1

--даем пользователю привелегию создавать сессии
GRANT CREATE SESSION TO USERS_1

--даем пользователю привелегию просмотра таблицы
GRANT SELECT ANY TABLE TO USERS_1
--разблокировать пользователя
ALTER USER USERS_1 ACCOUNT UNLOCK

--удаление пользователя и всех его объектов
DROP USER USERS_1 CASCADE
--создание таблицы AGE
CREATE TABLE AGE
(
NAME VARCHAR2(10),
AGE NUMBER(3)
)
--просмотр таблицы AGE
SELECT*FROM AGE
--добавляем данные в AGE
INSERT INTO AGE VALUES ('TOM',23)

--создаине пользователя с паролем
CREATE USER USERS_2 IDENTIFIED BY Sql$2
ALTER USER USERS_2 DEFAULT TABLESPACE USERS QUOTA UNLIMITED ON USERS

--создание роли администратора таблиц
CREATE ROLE ADMIN_TB

--установки привелегии роли ADMIN_TB
GRANT 
CREATE SESSION, 
CREATE ANY TABLE,
SELECT ANY TABLE,
UPDATE ANY TABLE, 
INSERT ANY TABLE
TO ADMIN_TB

--Установка роли ADMIN_TB пользователю USERS_2
GRANT ADMIN_TB TO USERS_2

--установка привелегии на создание счетчика для ADMIN_TB
GRANT 
CREATE SEQUENCE
TO ADMIN_TB
--создаем счетчик id
CREATE SEQUENCE id
  MINVALUE 1
  START WITH 1
  INCREMENT BY 1
  CACHE 20;
  
--создаем таблицу организации
  CREATE TABLE organization(
id NUMBER,
name VARCHAR2(2000),
PhoneNumber VARCHAR2(100),
) 

SELECT * FROM organization

--добавляем значения
INSERT INTO organization (id, name, PhoneNumber) VALUES (id.NEXTVAL, 'OOO Мама', 79999999)
INSERT INTO organization (id, name, PhoneNumber) VALUES (id.NEXTVAL, 'OOO Папа', 78888888)
INSERT INTO organization (id, name, PhoneNumber, REGISTRATIONDATE) VALUES (id.NEXTVAL, 'OOO Брат', 77777777, (to_date('2011/04/22 08:30:00', 'yyyy/mm/dd hh24:mi:ss')))

--создаем таблицу сотркдники
CREATE TABLE employees
( 
id    NUMBER GENERATED ALWAYS AS IDENTITY,
name     VARCHAR2(20),
organization_id NUMBER
) 

SELECT * FROM employees
--добавляем сотрудников
INSERT INTO employees (name, organization_id) VALUES ('Tom', 1)
INSERT INTO employees (name, organization_id) VALUES ('Andry', 2)
INSERT INTO employees (name, organization_id) VALUES ('Jony', 2)

delete from employees where id=2
--связываем id
ALTER TABLE organization ADD PRIMARY KEY (ID)

ALTER TABLE employees
ADD (CONSTRAINT organization_id_1 FOREIGN KEY (organization_id) REFERENCES organization(id))

--сортироака    
SELECT *
FROM employees emp
JOIN organization org ON org.id = emp.organization_id
order by emp.organization_id

--подсчет всех сотрудников и уникальных организаций у сотрудников
SELECT COUNT(id) FROM employees
SELECT COUNT(DISTINCT organization_id) FROM employees

--подсчет сотрудников в организации и сортировка от большего к меньшему
SELECT org.name as оргинизация, COUNT(*) as сотрудников FROM employees emp
JOIN organization org ON org.id = emp.organization_id
group by org.name
order by COUNT(*) desc

-- индексы на основные таблицы
CREATE INDEX employees ON employees (id,name,organization_id)
CREATE INDEX organization ON organization (id,name)

--таблица с продуктами
CREATE TABLE items
( 
id    NUMBER GENERATED ALWAYS AS IDENTITY,
name VARCHAR2(2000),
price NUMBER (9,2)
) 

SELECT * FROM items

INSERT INTO items (name, price) VALUES ('Ручка', 20.50)
INSERT INTO items (name, price) VALUES ('Карандаш', 10)

--таблица продаж
CREATE TABLE sales
( 
id    NUMBER GENERATED ALWAYS AS IDENTITY,
items_id int,
quantity int,
employees_id int
) 

SELECT * FROM sales

ALTER TABLE sales add 
(
Dateofsale date
)

INSERT INTO sales (items_id,quantity,employees_id, Dateofsale ) VALUES (1,2,1,(to_date('2011/04/22', 'yyyy/mm/dd')))
INSERT INTO sales (items_id,quantity,employees_id, Dateofsale ) VALUES (2,5,25,(to_date('2011/06/07', 'yyyy/mm/dd')))

-- связываем оставшиеся таблицы
ALTER TABLE items ADD PRIMARY KEY (ID)

ALTER TABLE sales
ADD 
(
CONSTRAINT items_id FOREIGN KEY (items_id) REFERENCES items(id)
)

ALTER TABLE employees ADD PRIMARY KEY (ID)

ALTER TABLE sales
ADD 
(
CONSTRAINT employees_id FOREIGN KEY (employees_id) REFERENCES employees(id)
)

--отчет по продажам
SELECT  
org.name as Оргинизация,
emp.name as Продавец,
it.name ||' - '|| it.price ||'шт' as Продукт,
s.quantity*it.price as Продажа
FROM sales s
JOIN items it on s.id = it.id
JOIN employees emp on emp.id=s.employees_id
JOIN organization org on org.id=emp.organization_id

--Аналитические функции
SELECT FIRST_NAME, DEPARTMENT_ID, JOB_ID, SALARY, 
        MIN(SALARY) OVER (PARTITION BY DEPARTMENT_ID) minSALARY,
        MAX(SALARY) OVER (PARTITION BY DEPARTMENT_ID) maxSALARY,
        SUM(SALARY) OVER (PARTITION BY DEPARTMENT_ID) sumSALARY
FROM HR.EMPLOYEES
----
SELECT FIRST_NAME, DEPARTMENT_ID, JOB_ID, SALARY, MANAGER_ID,
        MIN(SALARY) OVER (PARTITION BY DEPARTMENT_ID, MANAGER_ID) minSALARY,
        MAX(SALARY) OVER (PARTITION BY DEPARTMENT_ID, MANAGER_ID) maxSALARY,
        SUM(SALARY) OVER (PARTITION BY DEPARTMENT_ID, MANAGER_ID) sumSALARY
FROM HR.EMPLOYEES
order by MANAGER_ID
----
SELECT FIRST_NAME, DEPARTMENT_ID, JOB_ID, SALARY, HIRE_DATE,
SUM(SALARY)
OVER (ORDER BY HIRE_DATE
RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW ) sumSALARY
FROM HR.EMPLOYEES;
----
SELECT FIRST_NAME, DEPARTMENT_ID, JOB_ID, SALARY, HIRE_DATE,
SUM(SALARY)
OVER (ORDER BY HIRE_DATE
ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW ) sumSALARY
FROM HR.EMPLOYEES;

--таблица с иерархическими данными
create table departments_hierarchy(
id     NUMBER,
pid    NUMBER,
name   VARCHAR2(250),
coef   NUMBER
);

SELECT * FROM departments_hierarchy

INSERT ALL
INTO departments_hierarchy VALUES (1,NULL,'Директор', 100)
INTO departments_hierarchy VALUES (2,1,'Главный юрист', 90)
INTO departments_hierarchy VALUES (3,1,'Главный экономист', 80)
INTO departments_hierarchy VALUES (4,2,'Юрист', 70)
INTO departments_hierarchy VALUES (5,3,'Экономист', 60)
INTO departments_hierarchy VALUES (6,5,'Бухгалтер', 50)
SELECT * FROM dual;

SELECT level, pid, name
FROM departments_hierarchy
START WITH pid is null
CONNECT BY PRIOR  id=pid
ORDER SIBLINGS BY NAME;

SELECT level, id, pid, 
       lpad('-',2*level,'-')||name as ДЛИНА
FROM departments_hierarchy
START WITH pid is NULL
CONNECT BY PRIOR  id = pid
ORDER SIBLINGS BY NAME;








